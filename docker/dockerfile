ARG UBUNTU_VERSION=24.04
FROM ubuntu:${UBUNTU_VERSION} AS base

ARG UID
ARG GID

ENV DEBIAN_FRONTEND=noninteractive

# A) Install software

## Install *base* software
RUN apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \
        aptitude apt-utils \
        zlib1g-dev ca-certificates pkg-config \
        software-properties-common gpg-agent \
        curl libcurl3-dev \
        wget rsync \
        sudo vim \
        \
        lshw htop lsof \
        inetutils-ping \
        netcat-traditional \
        nmap net-tools hping3 \
        iftop nload \
        \
        zip unzip unrar p7zip-full p7zip-rar \
        \
	rpcbind \
        kmod \
        nfs-common nfs-kernel-server \
        \
        ubuntu-restricted-extras \
        imagemagick \
        && \
    apt-get clean

## Install *development* software
RUN apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \
        \
        build-essential \
        autoconf cmake g++ git \
        gdb valgrind strace \
        man-db doxygen \
        libtool \
        \
        jq yamllint \
	libjson-c-dev \
        nasm \
        && \
    apt-get clean


# B) Install and configure OpenSSH

## Install SSH
RUN apt-get install -y --no-install-recommends openssh-client openssh-server
RUN mkdir -p /var/run/sshd

## Allow Root login
RUN sed -i 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'  /etc/pam.d/sshd
RUN sed -i 's/PermitRootLogin prohibit-password/#PermitRootLogin prohibit-password/'    /etc/ssh/sshd_config
RUN echo "PermitRootLogin yes" >> /etc/ssh/sshd_config

## Allow to talk to containers without asking for confirmation
RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
    echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new && \
    mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config


# C) Setup lab user

## New lab using/reusing $UID/GID
RUN getent group  "$GID" > /dev/null || addgroup --gid $GID lab
RUN getent group  "$GID" > /dev/null && export GNAME=$(getent group  "$GID" | cut -d: -f1) && sudo groupmod -n lab "$GNAME"
RUN getent passwd "$UID" > /dev/null || adduser  --uid $UID --gid $GID --disabled-password --gecos "" lab
RUN getent passwd "$UID" > /dev/null && export UNAME=$(getent passwd "$UID" | cut -d: -f1) && sudo usermod  -l lab -m -d /home/lab "$UNAME"

## sudo
RUN echo 'lab ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
RUN echo 'lab:lab' | sudo chpasswd


# D) Home for user lab

## Populate initial home
ADD docker/base-lab      /tmp/base-lab/
RUN mv /tmp/base-lab/*   /home/lab
RUN chown -R lab:lab     /home/lab

## User keygen
USER lab
 RUN mkdir -p  /home/lab/.ssh
 RUN chmod 700 /home/lab/.ssh
 RUN ssh-keygen -q -t rsa -N "" -f /home/lab/.ssh/id_rsa
 RUN ssh-keygen -q -t dsa -N "" -f /home/lab/.ssh/id_dsa
 RUN cat /home/lab/.ssh/id_dsa.pub >> /home/lab/.ssh/authorized_keys
 RUN cat /home/lab/.ssh/id_rsa.pub >> /home/lab/.ssh/authorized_keys
 RUN sudo chown -R lab:lab /home/lab

## Default workdir
WORKDIR "/home/lab"


# E) Laboratories

## Install MPI + Apache Spark
USER root
RUN apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \
        \
        python3-pip \
        \
        openjdk-8-jdk \
        \
        libmpich-dev libmpich12 mpich mpich-doc \
        && \
    apt-get clean
RUN pip3 install py4j --break-system-packages

## Download and install Spark
USER lab
RUN wget https://dlcdn.apache.org/spark/spark-4.0.0/spark-4.0.0-bin-hadoop3.tgz  -O /tmp/spark-4.0.0-bin-hadoop3.tgz
RUN mv  /tmp/spark-4.0.0-bin-hadoop3.tgz  /home/lab/spark-4.0.0-bin-hadoop3.tgz
RUN tar zxf /home/lab/spark-4.0.0-bin-hadoop3.tgz -C /home/lab/
RUN mv /home/lab/spark-4.0.0-bin-hadoop3             /home/lab/spark

## Update PATH
RUN echo "# Spark"                                    >> /home/lab/.profile
RUN echo "export PATH=/home/lab/src/spark/bin:\$PATH" >> /home/lab/.profile


# F) Container start-up
USER root
RUN mkdir -p /shared
RUN mkdir -p /srv

ADD  docker/base-srv     /tmp/base-srv/
RUN mv /tmp/base-srv/*   /srv

EXPOSE 22
CMD ["/srv/dockerstart.sh"]
